# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: MusicBot

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Fix update notify
      uses: jacobtomlinson/gha-find-replace@master
      with: 
        find: "0.2.7-actions"
        replace: "auto-${{ github.sha }}" 
        include: "pom.xml"
    - name: Build with Maven
      run: mvn package --file pom.xml
    - name: Get time
      uses: gerred/actions/current-time@master
      id: time 
    - name: changelog
      uses: scottbrenner/generate-changelog-action@master
      id: changelog
      env:
        REPO: ${{ github.repository }}
    - uses: actions/create-release@latest
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: auto-${{ github.sha }}
        release_name: v0.2.7 - ${{ steps.time.outputs.time }}
        body: |
          Автоматический релиз из коммита
          ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false  
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/MusicBotW-0.2.7-actions-All.jar
        asset_name: MusicBotW-0.2.7-actions-All.jar
        asset_content_type: application/java-archive 
    - uses: actions/upload-artifact@v1
      with:
        name: jar
        path: ./target/MusicBotW-0.2.7-actions-All.jar

